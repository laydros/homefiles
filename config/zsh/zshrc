# -*- conf-unix -*-

# =========
#   INIT
# =========

# Lots borrowed from https://leahneukirchen.org/dotfiles/.zshrc

## completion for homebrew: https://docs.brew.sh/Shell-Completion
if type brew &>/dev/null; then
	FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
fi

unsetopt autocd
bindkey -e
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/laydros/.config/zsh/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

# == HISTORY

HISTFILE=$XDG_CONFIG_HOME/zsh/histfile
HISTSIZE=11000              # Max entries to keep in memory
SAVEHIST=10000              # Max entries to save to file

setopt APPEND_HISTORY       # Append to history, rather than overwriting
setopt SHARE_HISTORY        # 
setopt inc_append_history   # append immediately rather than only at exit
setopt HIST_VERIFY          # ask for confirmation every time you bang (!) a command
setopt SHARE_HISTORY
setopt HIST_IGNORE_DUPS     # Don't add to history if it's the same as previous event
setopt hist_ignore_all_dups # Remove older event if new event is duplicate.
setopt hist_save_no_dups    # older commands that duplicate newer ones are omitted.
setopt HIST_IGNORE_SPACE
setopt EXTENDED_HISTORY  # add timestamps to history

# setopt HIST_IGNORE_ALL_DUPS  # don't record dupes in history
# setopt HIST_REDUCE_BLANKS

# == THEMING

## These are already done by zsh-newuser-install with
## slightly different option flags
#autoload -U compinit colors zcalc
#compinit -d

autoload -U colors zcalc
colors

# possible fix for very slow autocomplete in git repo
# https://stackoverflow.com/questions/9810327/zsh-auto-completion-for-git-takes-significant-amount-of-time-can-i-turn-it-off/9810485#9810485

__git_files () { 
    _wanted files expl 'local files' _files     
}

# =============
#   EXPORT
# =============


PATH=$HOME/bin:$HOME/.local/bin:$PATH
# for rust
PATH=$HOME/.local/share/cargo/bin:$PATH
# for brew
PATH=/opt/homebrew/sbin:/opt/homebrew/bin:/opt/homebrew/opt/python@3.9/libexec/bin:$PATH
# for go
PATH=$HOME/.local/share/go/bin:$PATH

export PATH


# Color man pages
export LESS_TERMCAP_mb=$'\E[01;32m'
export LESS_TERMCAP_md=$'\E[01;32m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;47;34m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;36m'
export LESS=-R

# == PROMPT

# %B (%b) - turn on and off bold
# %F{red} (%f) - turn on and off red
# the chunk of %(?.. %??)%(1j. %j&.) seems to show last cmd error code

#PS1='%B%m%F{red}%(?.. %??)%(1j. %j&.)%f%b %F{cyan}%2~ %f%B%#%b '
PROMPT='%B%m%F{red}%(?.. %??)%(1j. %j&.)%f%b %F{cyan}%2~ %f%B%#%b '

## Test some manjaro zsh stuff

# enable substitution for prompt
setopt prompt_subst
# Maia prompt
#PROMPT="%B%{$fg[cyan]%}%(4~|%-1~/.../%2~|%~)%u%b >%{$fg[cyan]%}>%B%(?.%{$fg[cyan]%}.%{$fg[red]%})>%{$reset_color%}%b "
#RPROMPT="%{$fg[red]%} %(?..[%?])"

# Print a greeting message when shell is started
if [[ "$OSTYPE" = darwin* ]]; then
   echo $USER@$HOST  $(uname -srm)
else
   echo $USER@$HOST  $(uname -srm) $(lsb_release -rcs)
fi

zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"         # Colored completion (different colors for dirs/files/etc)
zstyle ':completion:*' rehash true                              # automatically find new executables in path
# Speed up completions
zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path $XDG_CONFIG_HOME/zsh/cache

# options to look into
setopt NO_BG_NICE # don't nice background tasks
setopt NO_HUP
# setopt NO_LIST_BEEP
# setopt LOCAL_OPTIONS # allow functions to have local options
# setopt LOCAL_TRAPS # allow functions to have local traps
setopt PROMPT_SUBST
# setopt CORRECT               # auto correct mistakes
# setopt COMPLETE_IN_WORD
# setopt IGNORE_EOF

setopt C_BASES
setopt OCTAL_ZEROES
setopt PRINT_EIGHT_BIT
setopt SH_NULLCMD
setopt AUTO_CONTINUE
setopt PATH_DIRS
setopt NO_NOMATCH
setopt EXTENDED_GLOB
disable -p '^'

setopt LIST_PACKED
setopt BASH_AUTO_LIST
setopt NO_AUTO_MENU
setopt NO_CORRECT
setopt NO_ALWAYS_LAST_PROMPT
setopt NO_FLOW_CONTROL

# Figure out the SHORT hostname
if [[ "$OSTYPE" = darwin* ]]; then
  # macOS's $HOST changes with dhcp, etc. Use ComputerName if possible.
  SHORT_HOST=$(scutil --get ComputerName 2>/dev/null) || SHORT_HOST=${HOST/.*/}
else
  SHORT_HOST=${HOST/.*/}
fi

# ===========
#   ALIASES
# ===========

# if [-x /usr/bin/dircolors ]; then
#     alias ls='ls --color=auto'

# enable color support of ls and also add handy aliases
  if [ -x /usr/bin/dircolors ]; then
      test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
      alias ls='ls -F --color=auto'
      alias grep='grep --color=auto'
      alias fgrep='fgrep --color=auto'
      alias egrep='egrep --color=auto'
  fi

# some more ls aliases
    alias ll='ls -alF'
    alias la='ls -A'
    alias l='ls -CF'
    
# if using exa
#alias ls="exa --color=auto -a -g"


#alias df='df -h -x"squashfs"'
alias sort='LC_ALL=C sort'
# alias em='emacsclient -n'
alias dotf='ls .[a-zA-Z0-9_]*'
alias qr='qrencode -t UTF8'
alias cp="cp -iv"                    # confirm before overwriting, verbose
alias cat="bat -p"
alias clear="clear -x"
alias ip="ip -c"
alias feh="echo imv"

# alias ls='LC_COLLATE=C ls -FG'
alias ls='ls -F'

# == Aliases for XDG
alias wget="wget --hsts-file=$XDG_CACHE_HOME/wget-hsts"
alias mbsync="mbsync -c $XDG_CONFIG_HOME/isync/mbsyncrc"
alias irssi="irssi --config=$XDG_CONFIG_HOME/irssi/config --home=$XDG_DATA_HOME/irssi"
alias gpg2="gpg2 --homedir $XDG_DATA_HOME/gnupg"
alias dosbox="dosbox -conf $XDG_CONFIG_HOME/dosbox/dosbox.conf"
alias sqlite3="sqlite3 -init $XDG_CONFIG_HOME/sqlite3/sqliterc"
alias mocp="mocp -M $XDG_CONFIG_HOME/moc"

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'    ')"'

# == nvm on the mac

export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# == calculator
c() { printf "%s\n" "$@" | bc -l }

# == To try from leahneukirchen.org

# keep - poor man's version control, make freshly numbered copies
keep() {
  local f v
  [[ $# = 0 ]] && return 255
  for f; do
    f=$f:A
    v=($f.<->(nOnN[1]))
    if [[ -n "$v" ]] && cmp $v $f >/dev/null 2>&1; then
      print -u2 $v not modified
    else
      cp -va $f $f.$((${${v:-.0}##*.} + 1))
    fi
  done
}

# 0x0 FILE - paste to 0x0.st
# 16dec2015  +chris+
0x0() { curl -F "file=@${1:--}" https://0x0.st/ }

# ixio FILE - paste to ix.io
# 02apr2018  +leah+
ixio() { curl -F "f:1=@${1:--}" http://ix.io/ }

# zpass - generate random password
# 01nov2014  +chris+
# 10mar2017  +leah+  default to length 12
zpass() {
  LC_ALL=C tr -dc '0-9A-Za-z_@#%*,.:?!~' </dev/urandom | head -c${1:-12}
  echo
}

# cde - cd to working directory of current emacs buffer
# 11nov2014  +chris+
# 13dec2017  +leah+  print when not on a tty
# 26nov2019  +leah+  append $1
cde() {
  local op=print
  [[ -t 1 ]] && op=cd
  $op ${(A):-${(Q)~$(emacsclient -e '(with-current-buffer
                                       (window-buffer (selected-window))
                                       default-directory) ')}${1:-/.}}
}

# ecat - print current emacs buffer
# 15aug2016  +chris+
ecat() {
  () {
    emacsclient -e '(with-current-buffer (window-buffer (selected-window))
                      (write-region (point-min) (point-max) "'$1'" nil :quiet))
                   ' >/dev/null &&
    cat $1
  } =(:)
}

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# sbin for homebrew
export PATH="/usr/local/sbin:$PATH"
# source zsh functions
fpath+=${ZDOTDIR:-~}/.zsh_functions
