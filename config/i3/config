# vim:filetype=i3
# This file is a modified version based on default i3-config-wizard config
# source is available here:
# https://raw.githubusercontent.com/endeavouros-team/endeavouros-i3wm-setup/master/.config/i3/config
# Maintainer: joekamprad [joekamprad@endeavouros.com]
# https://endeavouros.com
#
# iconic font icon search: https://fontawesome.com/v4.7/cheatsheet/
#
# --> to update this run the following command (will backup existing setup file)
# wget --backups=1 https://raw.githubusercontent.com/endeavouros-team/endeavouros-i3wm-setup/main/.config/i3/config -P ~/.config/i3/
#
# Endeavouros-i3 config file
# Source for complete framework of our i3 config and theming here: https://github.com/endeavouros-team/endeavouros-i3wm-setup
# EndeavourOS wiki holds some Information also: https://discovery.endeavouros.com/window-tiling-managers/i3-wm/
# Please see http://i3wm.org/docs/userguide.html for the official i3 reference!

#######################
# config starts here: #
#######################

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4



# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu rofi -show run



# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango: Noto Sans Regular 10

# preferred terminal emulator
set $term alacritty
set $term2 st

# vim like direction keys
set $left h
set $down j
set $up k
set $right l

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet



bindsym $mod+mod1+l exec i3lock -d

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+Return exec $term2

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    #floating_modifier $mod normal
    floating_modifier $mod

    # start dmenu (a program launcher)
    #bindsym $mod+d exec --no-startup-id dmenu_run
    #bindsym $mod+space exec dmenu_run
    # A more modern dmenu replacement is rofi:
    # bindcode $mod+40 exec "rofi -modi drun,run -show drun"
    # There also is i3-dmenu-desktop which only displays applications shipping a
    # .desktop file. It is a wrapper around dmenu, so you need that installed.
    # bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop
    #bindsym $mod+Shift+d exec --no-startup-id i3-dmenu-desktop

    # Reload the configuration file
    bindsym $mod+Shift+c reload
    # restart sway/i3 inplace (preserves your layout/session, can be used to upgrade i3)
    bindsym $mod+Shift+r restart

    # Exit sway/i3 (logs you out of your Wayland/X session)
    bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"


#
# Media Keys
#
    set $refresh_i3status killall -SIGUSR1 i3status
    bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
    bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
    bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
    bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
    bindsym XF86AudioPrev exec playerctl previous
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next

    # Media keys
    # bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 0 +5%
    # bindsym XF86AudioLowerVolume exec pactl set-sink-volume 0 -- -5%
    # bindsym XF86AudioMute exec pactl set-sink-mute 0 toggle
    # bindsym XF86AudioPlay exec ncmpcpp toggle
    # bindsym XF86AudioPrev exec ncmpcpp prev
    # bindsym XF86AudioNext exec ncmpcpp next
    
    # Framework Laptop F9: Super_L + p
    # TODO: Assign this multiple screen key with the toggle multiple screens when using it.
    # https://fedoramagazine.org/using-i3-with-multiple-monitors/
    #bindsym $mod+p exec firefox https://fedoramagazine.org/using-i3-with-multiple-monitors/
    # Framework Laptop F10: XF86RFKill (already available)
    # $ rfkill list all
    # $ nmcli radio all
    # Framework Laptop F11: Print
    # https://github.com/swaywm/sway/wiki#taking-screenshots
    # Use grimshot.
    #bindsym Print exec grimshot save area
    #bindsym Shift+Print exec grimshot save screen
    #bindsym $mod2+Print exec grimshot save active
    # Framework Laptop F12: XF86AudioMedia
        bindsym XF86AudioMedia exec firefox https://community.frame.work/
    #bindsym Shift+XF86AudioMedia exec firefox https://en.wikipedia.org/wiki/Framework_Computer

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    # familiar keybindings to switch workspaces
    bindsym $mod+Ctrl+Left workspace prev
    bindsym $mod+Ctrl+Right workspace next
    # TODO : look into libinput-gestures to use with trackpad

#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number $ws1
    bindsym $mod+2 workspace number $ws2
    bindsym $mod+3 workspace number $ws3
    bindsym $mod+4 workspace number $ws4
    bindsym $mod+5 workspace number $ws5
    bindsym $mod+6 workspace number $ws6
    bindsym $mod+7 workspace number $ws7
    bindsym $mod+8 workspace number $ws8
    bindsym $mod+9 workspace number $ws9
    bindsym $mod+0 workspace number $ws10
    bindsym $mod+Tab workspace back_and_forth
# move focused container to workspace
bindsym $mod+Shift+1    move container to workspace  $ws1
bindsym $mod+Shift+2    move container to workspace  $ws2
bindsym $mod+Shift+3    move container to workspace  $ws3
bindsym $mod+Shift+4    move container to workspace  $ws4
bindsym $mod+Shift+5    move container to workspace  $ws5
bindsym $mod+Shift+6    move container to workspace  $ws6
bindsym $mod+Shift+7    move container to workspace  $ws7
bindsym $mod+Shift+8    move container to workspace  $ws8
bindsym $mod+Shift+9    move container to workspace  $ws9
bindsym $mod+Shift+0    move container to workspace  $ws10

    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # Toggle movement
    #bindsym $mod+a workspace back_and_forth
    #bindsym $mod+Shift+a move container to workspace back_and_forth
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen
    # does i3 need bindsym $mod+f fullscreen toggle

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # focus the child container
    #bindsym $mod+d focus child

#
# Window:
#
    # Floating Windows
    for_window [class="Xfce4-notifyd"] floating enable;border none; focus mode_toggle
    for_window [window_role = "pop-up"] floating enable
    for_window [window_role = "bubble"] floating enable
    for_window [window_role = "dialog"] floating enable
    for_window [window_type = "dialog"] floating enable
    for_window [class = "dialog"] floating enable
    for_window [window_role = "task_dialog"] floating enable
    for_window [window_type = "menu"] floating enable
    for_window [window_role = "About"] floating enable
    #for_window [app_id = "floating"] floating enable
    #for_window [app_id = "floating_update"] floating enable, resize set width 1000px height 600px

    for_window [title = "Picture-in-Picture"] floating enable
    for_window [title = "Emulator"] floating enable

    for_window [title = "Password Required - Mozilla Thunderbird"] floating enable

    for_window [title = "Audacious Settings"] floating enable
    for_window [title = "ALSA Output Settings"] floating enable

##########################################
# configuration for workspace behaviour: #
##########################################

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:"
set $ws2 "2:"
set $ws3 "3:"
#set $ws4 "4:"
set $ws4 "4:"
set $ws5 "5:"
set $ws6 "6:"
set $ws7 "7:"
set $ws8 "8:"
set $ws9 "9:"
set $ws10 "10:"

#
# use workspaces on different displays:
# where you have to replace VGA-0/HDMI-0 with the names for your displays
# you can get from xrandr command
#workspace $ws1 output VGA-0
#workspace $ws2 output VGA-0
#workspace $ws3 output HDMI-0
#workspace $ws4 output HDMI-0
#workspace $ws5 output HDMI-0

# bind program to workspace and focus to them on startup:
assign [class="Xfce4-terminal"] $ws1
assign [class="(?i)firefox"] $ws2
assign [class="Thunar"] $ws3
assign [class="thunderbird"] $ws4
assign [class="TelegramDesktop"] $ws5
assign [class="Signal"] $ws5
assign [class="Brave"] $ws6
assign [class="xfreerdp"] $ws7
assign [class="Steam"] $ws8
assign [class="Spotify"] $ws10
assign [class="easyeffects"] $ws10

# automatic set focus new window if it opens on another workspace than the current:
for_window [class=Xfce4-terminal] focus
for_window [class=(?i)firefox] focus
for_window [class=Thunar] focus
for_window [class=Thunderbird] focus
for_window [class=TelegramDesktop] focus
for_window [class=Signal] focus
for_window [class=Brave] focus
for_window [class=Steam] focus

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10 px or 10 ppt
    bindsym $down resize grow height 10 px or 10 ppt
    bindsym $up resize shrink height 10 px or 10 ppt
    bindsym $right resize grow width 10 px or 10 ppt

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"



#
# Status Bar:
#
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}
#    status_command i3blocks
#    position top
#    font -misc-fixed-medium-r-normal--8-120-75-75-C-70-iso10646-1
#    font pango:DejaVu Sans Mono, Ionicons, FontAwesome 8
#    colors {
#    background #000000
#    statusline #33aaff
#    focused_workspace #11aaff #005500
#     active_workspace #11aaff #005500
#     urgent_workspace #ffffff #990000
#    }
#}


#
# Startup
#
exec --no-startup-id xsetroot -solid '#000'
exec --no-startup-id exec thunderbird
#exec --no-startup-id exec sxhkd
#exec --no-startup-id exec ~/.screenlayout/single-office.sh
#exec --no-startup-id exec dunst

