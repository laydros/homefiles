# vim:filetype=i3

# i3 config file (v4)
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# from airbenders config

#set $ws1  "1:  "
#set $ws2  "2:  "
#set $ws3  "3:  "
#set $ws4  "4:  "
#set $ws5  "5:  "
#set $ws6  "6:  "
#set $ws7  "7:  "
#set $ws8  "8:  "
#set $ws9  "9:  "
#set $ws10 "10:  "

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term2 urxvt
set $term alacritty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
#set $menu wofi --show=drun --lines=5 --prompt=""
set $menu rofi -show run

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
#font pango:Hack, FontAwesome 12
font pango:monospace 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet



bindsym $mod+mod1+l exec i3lock -d

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+Return exec $term2

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # start dmenu (a program launcher)
    #bindsym $mod+d exec --no-startup-id dmenu_run
    #bindsym $mod+space exec dmenu_run
    # A more modern dmenu replacement is rofi:
    # bindcode $mod+40 exec "rofi -modi drun,run -show drun"
    # There also is i3-dmenu-desktop which only displays applications shipping a
    # .desktop file. It is a wrapper around dmenu, so you need that installed.
    # bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop
    #bindsym $mod+Shift+d exec --no-startup-id i3-dmenu-desktop

    # Reload the configuration file
    bindsym $mod+Shift+c reload
    # restart sway/i3 inplace (preserves your layout/session, can be used to upgrade i3)
    bindsym $mod+Shift+r restart

    # Exit sway/i3 (logs you out of your Wayland/X session)
    bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"


#
# Media Keys
#
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status


#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    # familiar keybindings to switch workspaces
    bindsym $mod+Ctrl+Left workspace prev
    bindsym $mod+Ctrl+Right workspace next
    # TODO : look into libinput-gestures to use with trackpad

#
# Workspaces:
#
# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: main"
set $ws2 "2: mail"
set $ws3 "3: web"
set $ws4 "4: comm"
set $ws5 "5: media"
set $ws6 "6: rdc"
set $ws7 "7: vm"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

bindsym $mod+Tab workspace back_and_forth

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen
    # does i3 need bindsym $mod+f fullscreen toggle

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # focus the child container
    #bindsym $mod+d focus child



# Media keys
# bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 0 +5%
# bindsym XF86AudioLowerVolume exec pactl set-sink-volume 0 -- -5%
# bindsym XF86AudioMute exec pactl set-sink-mute 0 toggle
# bindsym XF86AudioPlay exec ncmpcpp toggle
# bindsym XF86AudioStop exec ncmpcpp stop
# bindsym XF86AudioPrev exec ncmpcpp prev
# bindsym XF86AudioNext exec ncmpcpp next

# Window decorations
#new_window pixel 5
#new_float pixel 1
#new_window none
#hide_edge_borders both
# class border backgr indicator
#client.focused #9fbc00 #9fbc00 #111111
#client.unfocused #444444 #444444 #315858
#client.focused_inactive #444444 #444444 #2c2c2f
#client.urgent #383a3b #383a3b #ee0000

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10 px or 10 ppt
    bindsym $down resize grow height 10 px or 10 ppt
    bindsym $up resize shrink height 10 px or 10 ppt
    bindsym $right resize grow width 10 px or 10 ppt

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"


# Toggle movement
#bindsym $mod+a workspace back_and_forth
#bindsym $mod+Shift+a move container to workspace back_and_forth
#bindsym $mod+n workspace next
#bindsym $mod+p workspace prev
#bindsym Control+Mod1+Right workspace next
#bindsym Control+Mod1+Left workspace prev

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}
#    status_command i3blocks
#    position top
#    font -misc-fixed-medium-r-normal--8-120-75-75-C-70-iso10646-1
#    font pango:DejaVu Sans Mono, Ionicons, FontAwesome 8
#    colors {
#    background #000000
#    statusline #33aaff
#    focused_workspace #11aaff #005500
#     active_workspace #11aaff #005500
#     urgent_workspace #ffffff #990000
#    }
#}

# auto enable floating mode
# class is usually 1st letter Cap and all else lowercase
# use 'xprop' or 'xwininfo' to get window information
#for_window [class="Xfce4-notifyd"] floating enable;border none; focus mode_toggle
# shutdown menu
#bindsym $mod+Shift+p exec xfce4-session-logout
# xfce settings
#bindsym $mod+Shift+s exec xfce4-settings-manager

# assign program to specific workspace
assign [class="Thunderbird"]           $ws9
assign [class="Pidgin"]                $ws5
assign [class="Spotify"]               $ws7
#assign [class="Vmplayer"] 8: vm


#
# Startup
#
exec --no-startup-id xsetroot -solid '#000'
#exec --no-startup-id exec mopidy
#exec --no-startup-id exec diodon
exec --no-startup-id exec thunderbird
##exec --no-startup-id exec emacs --daemon
#exec --no-startup-id exec vmplayer
#exec --no-startup-id exec firefox
# exec --no-startup-id exec st -e tmux
#exec --no-startup-id exec urxvt
#exec --no-startup-id exec sxhkd
#exec --no-startup-id exec ~/.screenlayout/single-office.sh
#exec --no-startup-id exec dunst
#exec --no-startup-id exec dropbox start
#exec --no-startup-id exec ~/.screenlayout/fehbg.sh
#exec --no-startup-id exec pidgin
#exec --no-startup-id exec ~/.screenlayout/desk-dual-right-is-vertical.sh
#exec --no-startup-id polybar example

### i3-gaps stuff ###

# Necessary for i3-gaps to work properly (pixel can be any value)
#for_window [class="^.*"] border pixel 3

# Smart Gaps
#smart_gaps on

# Smart Borders
#smart_borders on

# Some color adjustments
#client.focused_inactive #000000 #000000 #000000 #000000 #000000
#client.unfocused        #000000 #000000 #000000 #000000 #000000

# Set inner/outer gaps
#gaps inner 12
#gaps outer -2

# Gaps mode
#set $mode_gaps Gaps: (o) outer, (i) inner
#set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
#set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
#bindsym $mod+Shift+g mode "$mode_gaps"

#mode "$mode_gaps" {
#        bindsym o      mode "$mode_gaps_outer"
#        bindsym i      mode "$mode_gaps_inner"
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#}
#
#mode "$mode_gaps_inner" {
#        bindsym plus  gaps inner current plus 5
#        bindsym minus gaps inner current minus 5
#        bindsym 0     gaps inner current set 0
#
#        bindsym Shift+plus  gaps inner all plus 5
#        bindsym Shift+minus gaps inner all minus 5
#        bindsym Shift+0     gaps inner all set 0
#
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#}
#
#mode "$mode_gaps_outer" {
#        bindsym plus  gaps outer current plus 5
#        bindsym minus gaps outer current minus 5
#        bindsym 0     gaps outer current set 0
#
#        bindsym Shift+plus  gaps outer all plus 5
#        bindsym Shift+minus gaps outer all minus 5
#        bindsym Shift+0     gaps outer all set 0
#
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#}
